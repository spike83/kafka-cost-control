apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kafka-connect
  template:
    metadata:
      labels:
        k8s-app: kafka-connect
    spec:
      containers:
        - name: kafka-connect
          image: spoud/kafka-cost-control-connect:latest
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 2000m
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 500Mi
          env:
            - name: CONNECT_REST_ADVERTISED_HOST_NAME
              value: kafka-connect
            - name: CONNECT_REST_PORT
              value: "8083"
            - name: CONNECT_GROUP_ID
              value: kafka-cost-control-connect-group
            - name: CONNECT_INTERNAL_KEY_CONVERTER
              value: org.apache.kafka.connect.storage.StringConverter
            - name: CONNECT_INTERNAL_VALUE_CONVERTER
              value: org.apache.kafka.connect.json.JsonConverter
            - name: CONNECT_CONFIG_STORAGE_PARTITIONS
              value: "1"
            - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
              value: "3"
            - name: CONNECT_CONFIG_STORAGE_TOPIC
              value: kcc-exploration-connect-configs
            - name: CONNECT_OFFSET_STORAGE_PARTITIONS
              value: "1"
            - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
              value: "3"
            - name: CONNECT_OFFSET_STORAGE_TOPIC
              value: kcc-exploration-connect-offsets
            - name: CONNECT_STATUS_STORAGE_PARTITIONS
              value: "1"
            - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
              value: "3"
            - name: CONNECT_STATUS_STORAGE_TOPIC
              value: kafka-cost-control-connect-status
            - name: CONNECT_KEY_CONVERTER
              value: org.apache.kafka.connect.storage.StringConverter
            - name: CONNECT_VALUE_CONVERTER
              value: org.apache.kafka.connect.json.JsonConverter

            # Connect username and password
            - name: CLUSTER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: kafka-cost-control-secret
                  key: CLUSTER_API_KEY
            - name: CLUSTER_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: kafka-cost-control-secret
                  key: CLUSTER_API_SECRET

            # Connect main connection
            - name: CONNECT_BOOTSTRAP_SERVERS
              valueFrom:
                secretKeyRef:
                  name: kafka-cost-control-secret
                  key: KAFKA_BOOTSTRAP_SERVERS
            - name: CONNECT_SASL_JAAS_CONFIG
              value: "org.apache.kafka.common.security.plain.PlainLoginModule required username='$(CLUSTER_API_KEY)' password='$(CLUSTER_API_SECRET)';"
            - name: CONNECT_SECURITY_PROTOCOL
              value: SASL_SSL
            - name: CONNECT_SASL_MECHANISM
              value: PLAIN

            # Connect consumer connection
            - name: CONNECT_CONSUMER_BOOTSTRAP_SERVERS
              value: "$(CONNECT_BOOTSTRAP_SERVERS)"
            - name: CONNECT_CONSUMER_SASL_JAAS_CONFIG
              value: "$(CONNECT_SASL_JAAS_CONFIG)"
            - name: CONNECT_CONSUMER_SECURITY_PROTOCOL
              value: SASL_SSL
            - name: CONNECT_CONSUMER_SASL_MECHANISM
              value: PLAIN

            # Connect producer connection
            - name: CONNECT_PRODUCER_BOOTSTRAP_SERVERS
              value: "$(CONNECT_BOOTSTRAP_SERVERS)"
            - name: CONNECT_PRODUCER_SASL_JAAS_CONFIG
              value: "$(CONNECT_SASL_JAAS_CONFIG)"
            - name: CONNECT_PRODUCER_SECURITY_PROTOCOL
              value: SASL_SSL
            - name: CONNECT_PRODUCER_SASL_MECHANISM
              value: PLAIN
          ports:
            - containerPort: 8083
              name: http
  strategy:
    type: Recreate
  revisionHistoryLimit: 2
  progressDeadlineSeconds: 60

---
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: kafka-connect
  name: kafka-connect-service
spec:
  ports:
    - port: 8083
      name: http
      targetPort: 8083
  selector:
    k8s-app: kafka-connect
